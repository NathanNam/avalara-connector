<?xml version="1.0" encoding="UTF-8"?>
<!--

    Mule Avalara Cloud Connector

    Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com

    The software in this package is published under the terms of the CPAL v1.0
    license, a copy of which has been included with this distribution in the
    LICENSE.txt file.

-->

<mule xmlns="http://www.mulesoft.org/schema/mule/core" 
  xmlns:avalara="http://www.mulesoft.org/schema/mule/avalara"
  xmlns:json="http://www.mulesoft.org/schema/mule/json" 
  xmlns:spring="http://www.springframework.org/schema/beans"
  xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
  xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:zuora="http://www.mulesoft.org/schema/mule/zuora"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.mulesoft.org/schema/mule/avalara http://www.mulesoft.org/schema/mule/avalara/1.0-SNAPSHOT/mule-avalara.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
       http://www.mulesoft.org/schema/mule/json    http://www.mulesoft.org/schema/mule/json/3.2/mule-json.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.2/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/zuora http://www.mulesoft.org/schema/mule/zuora/1.0/mule-zuora.xsd"
       >


  <zuora:config username="${zuoraUsername}" password="${zuoraPassword}" endpoint="https://apisandbox.zuora.com/apps/services/a/29.0" />
  <avalara:config license="${avalaraLicense}" account="${avalaraAccount}" avalaraClient="${avalaraClient}" />
  
   <flow name="GetTaxes">
    <description>
        Answers total taxes using Avalara for an Invoice stored in Zuora, given its id. 
        This flows expects an inbound invoiceId to be set. Answers an string with a message 
        describing the total tax amount for the invoice
    </description>
    <http:inbound-endpoint host="localhost" port="9090" path="avalara-demo-get-tax" />
    <flow-ref name="GetZuoraInvoiceByInvoiceId"/>
    <flow-ref name="GetZuoraInvoiceItemsByInvoiceId"/>
    <flow-ref name="GetTaxesForInvoceAndItems"/>
    <expression-transformer 
        expression="Taxes calculates successfully for 
                    invoice #[header:inbound:invoiceId]. Total tax is $#[groovy:payload.totalTaxable]" 
        evaluator="string"/>     
  </flow>
  
  
  <flow name="GetZuoraInvoiceByInvoiceId">
   <description>
    Retrieves an Invoice record from Zuora given its Id. Answers the record as payload, 
    and sets the following invocation headers:
      * accountId
      * invoiceNumber
      * createDate
      * dueDate
   </description>
    <!-- 
    CHECK THIS URL FOR FIELDS OF AN INVOICE THAT MAY BE INTERESTING FOR THE GET-TAX HEADER:
    http://apidocs.developer.zuora.com/index.php/Invoice
     -->
   <zuora:find zquery="select accountId, invoiceNumber, createdDate, dueDate
                       from  Item
                       where id = '#[header:inbound:invoiceId]'"/>
    <scripting:component>
      <scripting:script engine="groovy">
        <![CDATA[
          if(payload.isEmpty()) throw new IllegalArgumentException("Invoice ${message.getInboundProperty('invoiceId')} does not exists ");
          assert payload.size() == 1, 'Should have returned exactly one element'
          return payload[0]        
        ]]>
      </scripting:script>
    </scripting:component>                   
    <message-properties-transformer scope="invocation">
      <add-message-property key="accountId" value="#[groovy:payload.accountId]" />
      <add-message-property key="invoiceNumber" value="#[groovy:payload.invoiceNumber]" />
      <add-message-property key="createDate" value="#[groovy:payload.createDate]" />
      <add-message-property key="dueDate" value="#[groovy:payload.dueDate]" />
    </message-properties-transformer>
  </flow>

  
  <flow name="GetZuoraInvoiceItemsByInvoiceId">
   <description>
    Retrieves a collection of InvoiceItems from Zuora given it's invoice id.
    Answers the collection of items. 
   </description>
    <!--
    CHECK THIS URL FOR FIELDS OF AN INVOICE ITEM THAT MAY BE INTERESTING FOR THE GET-TAX ITEMS: 
    http://apidocs.developer.zuora.com/index.php/InvoiceItem
     -->    
   <zuora:find zquery="select sKU, quantity, unitPrice, chargeDescription
                       from  InvoiceItem
                       where invoiceId = '#[header:inbound:invoiceId]'"/>                       
  </flow>
  
  
  <flow name="GetTaxesForInvoceAndItems">
   <description>
    Gets taxes from Avalara for the given collection of zuora InvoiceItems payload. 
    It expects the following headers to be set:
      * sKU
      * quantity
      * unitPrice
      * chargeDescription
    
    Answers the Avalara GetTaxResul
   </description>
   <scripting:component>
      <scripting:script engine="groovy">
        <![CDATA[        
        return payload.collect { it->
           [ 'itemCode' : it.sKU ,
             'qty' : new BigDecimal(it.quantity) ,
             'amount' : new BigDecimal(unitPrice) ,
             'discounted' : false ,
             'description' : it.chargeDescription ,
             'taxIncluded' : false ] 
        };
        ]]>
      </scripting:script>
    </scripting:component>
    <!-- TODO check format dates as 2010-09-13T01:18:14-07:00 (docDate="#[function:dateStamp:yyyy-MM-dd'THH:mm:ss-???]")-->
    <avalara:get-tax companyCode="MuleSoft, Inc."
                 docType="PURCHASE_ORDER"
                 docCode="#[variable:invoiceNumber]"
                 docDate="#[groovy: message.getInvocationProperty('createdDate').toGregorianCalendar().format('yyyy-MM-ddTHH:mm:ssTZD')]"
                 customerCode="#[variable:accountId]"
                 customerUsageType="Other"
                 discount="0"
                 purchaseOrderNo="#[variable:invoiceNumber]"
                 originCode="Origin"
                 destinationCode="Dest"
                 detailLevel="TAX"
                 serviceMode="AUTOMATIC"
                 paymentDate="#[groovy: message.getInvocationProperty('dueDate').toGregorianCalendar().format('yyyy-MM-ddTHH:mm:ssTZD')]"
                 exchangeRate="some exchange rate"
                 exchangeRateEffDate="#[groovy: message.getInvocationProperty('dueDate').toGregorianCalendar().format('yyyy-MM-ddTHH:mm:ssTZD')]">
          <avalara:base-addresses ref="#[groovy : [
              [ 'addressCode' : 'Origin' ,
                'line1' : 'Avalara' ,
                'line2' : '900 Winslow Way' ,
                'line3' : 'Suite 100' ,
                'city' : 'Bainbridge Island' ,
                'region' : 'WA' ,
                'postalCode' : '98110' ,
                'country' : 'USA' ] ,
              [ 'addressCode' : 'Dest' ,
                'line1' : '3130 Elliott' ,
                'city' : 'Seattle' ,
                'region' : 'WA' ,
                'postalCode' : '98121' ,
                'country' : 'USA' ]
          ] ]" />
          <avalara:list-of-lines ref="#[payload]" />
      </avalara:get-tax>
  </flow>
  
</mule>